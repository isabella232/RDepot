task restore {
    doLast{
        exec {
            executable "docker"
            args "exec", "oa-rdepot-app", "/bin/bash", "-c", "mkdir -p /opt/rdepot/repositories; mkdir -p /opt/rdepot/new; mkdir -p /opt/rdepot/generated; cp -fr /opt/testSourceFiles/info/* /opt/rdepot/repositories; cp -fr /opt/testGenerated/repository/* /opt/rdepot/generated; cp -fr /opt/newFiles/new/* /opt/rdepot/new"
        }

        exec {
            executable "docker"
            args "exec", "oa-rdepot-db", "su", "-", "postgres", "-c", "dropdb rdepot; createdb rdepot; psql rdepot < /opt/database.sql"
        }

        exec {
            executable "docker"
            args "exec", "oa-rdepot-repo", "/bin/sh", "-c", "rm -r /opt/rdepot/*; cp -rf /opt/testServer/* /opt/rdepot"
        }	

        println "Files restored"
    }
}

task restoreDeclarative {
	doLast {
		exec {
            executable "docker"
            args "exec", "oa-rdepot-db-declarative", "su", "-", "postgres", "-c", "dropdb postgres; createdb postgres; psql < /opt/database.sql"
        }
        
        println "Declarative restored"
	}
}

task wait {
    doLast{ task -> sleep(10 * 1000) }
}

task removeSources(type: Delete) {
    delete 'itestGenerated', 'itestNewFiles', 'itestPackages', 'itestServer', 'itestSourceFiles', 'itestPdf'
}

task checkServer {
	doLast{
        exec {
            executable "docker"
            args "exec", "oa-rdepot-repo", "/bin/sh", "-c", "cd /opt/rdepot/testrepo2/src/contrib/Archive/accrued/"
        }
    }
}

task checkOnServerIfRepositoryWithOnlyOnePackageDoesNotHaveArchive {
	doLast{
        exec {
            executable "docker"
            args "exec", "oa-rdepot-repo", "/bin/sh", "-c", "cd /opt/rdepot/testrepo2/src/contrib/Archive/visdat/"
        }
    }
}
